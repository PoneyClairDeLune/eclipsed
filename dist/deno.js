"use strict";import{serve}from"https://deno.land/std/http/server.ts";"use strict";(()=>{var c=class{#e={};addEventListener(e,t){this.#e[e]||(this.#e[e]=[]),this.#e[e].unshift(t)}removeEventListener(e,t){if(this.#e[e]){let s=this.#e[e].indexOf(t);s>-1&&this.#e[e].splice(s,1),this.#e[e].length<1&&delete this.#e[e]}}dispatchEvent(e,t){let s=new Event(e),r=this;s.data=t,this.#e[e]?.length>0&&this.#e[e].forEach(function(n){n?.call(r,s)}),this[`on${e}`]&&this[`on${e}`](s)}};var a=new TextEncoder,l=a.encode("data: "),o=a.encode(`\r
\r
`),h={Server:"Eclipsed","Content-Type":"text/html"},d={Server:"Eclipsed","Content-Type":"text/event-stream","Cache-Control":"no-cache"},f=class extends c{CLOSED=2;CONNECTING=0;OPEN=1;#e;#n;#r;#t=0;#s=[];get stream(){return this.#r}get readyState(){return this.#t}close(){console.debug("Closing stream."),this.#t<2&&this.#e.close(),this.#t=2,this.dispatchEvent("close")}send=async function(e){let t;switch(e.constructor){case Uint8Array:case Uint8ClampedArray:case Uint16Array:case Uint32Array:case BigUint64Array:case Int8Array:case Int16Array:case Int32Array:case BigInt64Array:case Float32Array:case Float64Array:{t=e;break}case ArrayBuffer:{t=new Uint8Array(e);break}case String:{t=a.encode(e);break}case DataView:{t=new Uint8Array(e.buffer);break}case Blob:{t=new Uint8Array(await e.arrayBuffer());break}default:t=a.encode(JSON.stringify(e))}this.#t==1?(this.#e.enqueue(l),this.#e.enqueue(t),this.#e.enqueue(o)):this.#s.push(t)};constructor(){super();let e=new ReadableStream({cancel:r=>{this.close()},start:r=>{if(this.#e=r,this.#t=1,this.#s.length>0){let n=0;this.#s.forEach(i=>{n+=i.length,r.enqueue(i),r.enqueue(o)}),console.debug(`Sent ${this.#s.length} messages in queue, ${n} bytes in total.`)}else console.debug("Nothing to pull from queue.");this.#s=[],this.dispatchEvent("open")}});this.#n=e;let t=e.tee();t[1].getReader().closed.then(()=>{this.close()}),this.#r=t[0]}},u=function(e){if(!e.headers.get("Accept").startsWith("text/event-stream"))return{response:new Response("Bad request",{status:400,statusText:"Bad Request",headers:h})};let t=new f;return{socket:t,response:new Response(t.stream,{headers:d})}};serve(e=>{let{socket:t,response:s}=u(e),r=setInterval(()=>{t?.readyState==1?(t.send("Test heartbeat."),console.debug(t?.readyState)):(console.debug("Closed event source."),t?.close(),clearInterval(r))},1e3);return s});})();
